{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\drizzle-react-tutorial\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ReadString from \"./controllers/ReadString\";\nimport SetString from \"./controllers/SetString\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      drizzleState: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props; // subscribe to changes in the store\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState\n        });\n      }\n    }); // adding scripts\n    // adding scripts\n\n    const script1 = document.createElement(\"script\");\n    const script2 = document.createElement(\"script\");\n    const script3 = document.createElement(\"script\");\n    const script4 = document.createElement(\"script\");\n    script1.src = \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\";\n    script1.async = true;\n    script2.src = \"https://code.jquery.com/jquery-3.3.1.slim.min.js\";\n    script2.async = true;\n    script3.src = \"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\";\n    script3.async = true;\n    script4.src = \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\";\n    script4.async = true;\n    document.body.appendChild(script1);\n    document.body.appendChild(script2);\n    document.body.appendChild(script3);\n    document.body.appendChild(script4);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    if (this.state.loading) return \"Loading Drizzle...\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-expand-sm bg-dark navbar-dark lg\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-3\",\n          children: \"ROCKET ELEVATORS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(ReadString, {\n          drizzle: this.props.drizzle,\n          drizzleState: this.state.drizzleState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SetString, {\n          drizzle: this.props.drizzle,\n          drizzleState: this.state.drizzleState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Diana/drizzle-react-tutorial/client/src/App.js"],"names":["React","Component","ReadString","SetString","App","state","loading","drizzleState","componentDidMount","drizzle","props","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState","script1","document","createElement","script2","script3","script4","src","async","body","appendChild","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReadString from \"./controllers/ReadString\";\nimport SetString from \"./controllers/SetString\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  state = { loading: true, drizzleState: null };\n\n  componentDidMount() {\n    const { drizzle } = this.props;\n\n    // subscribe to changes in the store\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState();\n\n      // check to see if it's ready, if so, update local component state\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState });\n      }\n    });\n\n    \t\t// adding scripts\n\n\t\t// adding scripts\n\t\tconst script1 = document.createElement(\"script\");\n\t\tconst script2 = document.createElement(\"script\");\n\t\tconst script3 = document.createElement(\"script\");\n\t\tconst script4 = document.createElement(\"script\");\n\n\t\tscript1.src =\n\t\t\t\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\";\n\t\tscript1.async = true;\n\t\tscript2.src = \"https://code.jquery.com/jquery-3.3.1.slim.min.js\";\n\t\tscript2.async = true;\n\t\tscript3.src =\n\t\t\t\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\";\n\t\tscript3.async = true;\n\t\tscript4.src =\n\t\t\t\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\";\n\t\tscript4.async = true;\n\n\t\tdocument.body.appendChild(script1);\n\t\tdocument.body.appendChild(script2);\n\t\tdocument.body.appendChild(script3);\n\t\tdocument.body.appendChild(script4);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    if (this.state.loading) return \"Loading Drizzle...\";\n    return (\t\t\t\n    <div>\n      <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark lg\">\n        <h1 className =\"display-3\">ROCKET ELEVATORS</h1>\n      </nav>\n      <div className=\"App\">\n        <ReadString\n          drizzle={this.props.drizzle}\n          drizzleState={this.state.drizzleState}\n        />\n        <SetString\n          drizzle={this.props.drizzle}\n          drizzleState={this.state.drizzleState}\n        />\n      </div>\n    </div> \n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}