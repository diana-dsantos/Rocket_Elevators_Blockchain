{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Documents\\\\projetos\\\\week 12\\\\drizzle-react-tutorial\\\\client\\\\src\\\\controllers\\\\MaterialsProviderShow.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MaterialsProviderShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKeyControllers: null,\n      dataKeyShafts: null,\n      dataKeyDoors: null,\n      dataKeyButtons: null,\n      dataKeyDisplay: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.MyStringStore;\n    console.log(drizzle);\n    console.log(drizzleState); // let drizzle know we want to watch the `myString` method\n\n    const dataKeyControllers = contract.methods[\"controllers\"].cacheCall();\n    const dataKeyShafts = contract.methods[\"shafts\"].cacheCall();\n    const dataKeyDoors = contract.methods[\"doors\"].cacheCall();\n    const dataKeyButtons = contract.methods[\"buttons\"].cacheCall();\n    const dataKeyDisplay = contract.methods[\"display\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKeyControllers,\n      dataKeyShafts,\n      dataKeyDoors,\n      dataKeyButtons,\n      dataKeyDisplay\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      MyStringStore\n    } = this.props.drizzleState.contracts; // using the saved `dataKey`, get the variable we're interested in\n\n    const controllers = MyStringStore.batteries[this.state.dataKeyControllers];\n    const shafts = MyStringStore.columns[this.state.dataKeyShafts];\n    const doors = MyStringStore.elevators[this.state.dataKeyDoors];\n    const buttons = MyStringStore.floors[this.state.dataKeyButtons];\n    const display = MyStringStore.floors[this.state.dataKeyDisplay]; // if it exists, then we display its value\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Input your project data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Controllers: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setControllers')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Shafts: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setShafts')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Doors: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setDoors')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Buttons: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setButtons')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6\",\n                children: \"Display: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onKeyDown: e => this.handleKeyDown(e, 'setDisplay')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MaterialsProviderShow;","map":{"version":3,"sources":["C:/Users/Diana/Documents/projetos/week 12/drizzle-react-tutorial/client/src/controllers/MaterialsProviderShow.js"],"names":["React","MaterialsProviderShow","Component","state","dataKeyControllers","dataKeyShafts","dataKeyDoors","dataKeyButtons","dataKeyDisplay","componentDidMount","drizzle","drizzleState","props","contract","contracts","MyStringStore","console","log","methods","cacheCall","setState","render","controllers","batteries","shafts","columns","doors","elevators","buttons","floors","display","e","handleKeyDown"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass MaterialsProviderShow extends React.Component {\r\n  state = { dataKeyControllers: null,dataKeyShafts: null, dataKeyDoors: null, dataKeyButtons: null, dataKeyDisplay: null};\r\n\r\n  componentDidMount() {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MyStringStore;\r\n\r\n    console.log(drizzle);\r\n    console.log(drizzleState);\r\n\r\n    // let drizzle know we want to watch the `myString` method\r\n    const dataKeyControllers = contract.methods[\"controllers\"].cacheCall();\r\n    const dataKeyShafts = contract.methods[\"shafts\"].cacheCall();\r\n    const dataKeyDoors = contract.methods[\"doors\"].cacheCall();\r\n    const dataKeyButtons = contract.methods[\"buttons\"].cacheCall();\r\n    const dataKeyDisplay = contract.methods[\"display\"].cacheCall();\r\n\r\n    // save the `dataKey` to local component state for later reference\r\n    this.setState({ dataKeyControllers, dataKeyShafts, dataKeyDoors, dataKeyButtons, dataKeyDisplay});\r\n  }\r\n\r\n  render() {\r\n    // get the contract state from drizzleState\r\n    const { MyStringStore } = this.props.drizzleState.contracts;\r\n \r\n    // using the saved `dataKey`, get the variable we're interested in\r\n    const controllers = MyStringStore.batteries[this.state.dataKeyControllers];\r\n    const shafts = MyStringStore.columns[this.state.dataKeyShafts];\r\n    const doors = MyStringStore.elevators[this.state.dataKeyDoors];\r\n    const buttons = MyStringStore.floors[this.state.dataKeyButtons];\r\n    const display = MyStringStore.floors[this.state.dataKeyDisplay];\r\n\r\n    // if it exists, then we display its value\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card\" >\r\n        <div className=\"card-header\">\r\n          Input your project data\r\n        </div>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Controllers: </div>{\" \"}\r\n              <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setControllers')} />\r\n            </div>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Shafts: </div>{\" \"}\r\n              <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setShafts')} />\r\n            </div>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Doors: </div>{\" \"}\r\n              <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setDoors')} />\r\n            </div>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Buttons: </div>{\" \"}\r\n              <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setButtons')} />\r\n            </div>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Display: </div>{\" \"}\r\n              <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setDisplay')} />\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n        </div>\r\n      </div>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default MaterialsProviderShow;"]},"metadata":{},"sourceType":"module"}