{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Documents\\\\projetos\\\\week 12\\\\drizzle-react-tutorial\\\\client\\\\src\\\\controllers\\\\ManufacturingShow.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ManufacturingShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKeyaluminumbBars: null,\n      dataKeyaluminumSheets: null,\n      dataKeystainlessSteelSheets: null,\n      dataKeyFloors: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.MyStringStore;\n    console.log(drizzle);\n    console.log(drizzleState); // let drizzle know we want to watch the `myString` method\n\n    const dataKeyaluminumbBars = contract.methods[\"aluminumbBars\"].cacheCall();\n    const dataKeyaluminumSheets = contract.methods[\"aluminumSheets\"].cacheCall();\n    const dataKeystainlessSteelSheets = contract.methods[\"stainlessSteelSheets\"].cacheCall();\n    const dataKeyFloors = contract.methods[\"floors\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKeyaluminumbBars,\n      dataKeyaluminumSheets,\n      dataKeystainlessSteelSheets,\n      dataKeyFloors\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      MyStringStore\n    } = this.props.drizzleState.contracts; // using the saved `dataKey`, get the variable we're interested in\n    // aluminumbBars\n    // aluminumSheets\n    // stainlessSteelSheets\n    // springs\n    // rubberBands\n    // rubberBumpers\n    // lightinLed\n    // displayPanel\n    // manufacturingButtons\n\n    const aluminumbBars = MyStringStore.aluminumbBars[this.state.dataKeyaluminumbBars];\n    const aluminumSheets = MyStringStore.aluminumSheets[this.state.dataKeyaluminumSheets];\n    const stainlessSteelSheets = MyStringStore.stainlessSteelSheets[this.state.dataKeystainlessSteelSheets];\n    const floors = MyStringStore.floors[this.state.dataKeyFloors]; // if it exists, then we display its value\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Controllers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Shafts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Doors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Buttons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluminumbBars && aluminumbBars.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluminumSheets && aluminumSheets.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluminumbBars && aluminumbBars.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluminumSheets && aluminumSheets.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ManufacturingShow;","map":{"version":3,"sources":["C:/Users/Diana/Documents/projetos/week 12/drizzle-react-tutorial/client/src/controllers/ManufacturingShow.js"],"names":["React","ManufacturingShow","Component","state","dataKeyaluminumbBars","dataKeyaluminumSheets","dataKeystainlessSteelSheets","dataKeyFloors","componentDidMount","drizzle","drizzleState","props","contract","contracts","MyStringStore","console","log","methods","cacheCall","setState","render","aluminumbBars","aluminumSheets","stainlessSteelSheets","floors","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass ManufacturingShow extends React.Component {\r\n  state = { dataKeyaluminumbBars: null,dataKeyaluminumSheets: null, dataKeystainlessSteelSheets: null, dataKeyFloors: null};\r\n\r\n  componentDidMount() {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MyStringStore;\r\n\r\n    console.log(drizzle);\r\n    console.log(drizzleState);\r\n\r\n    // let drizzle know we want to watch the `myString` method\r\n    const dataKeyaluminumbBars = contract.methods[\"aluminumbBars\"].cacheCall();\r\n    const dataKeyaluminumSheets = contract.methods[\"aluminumSheets\"].cacheCall();\r\n    const dataKeystainlessSteelSheets = contract.methods[\"stainlessSteelSheets\"].cacheCall();\r\n    const dataKeyFloors = contract.methods[\"floors\"].cacheCall();\r\n\r\n    // save the `dataKey` to local component state for later reference\r\n    this.setState({ dataKeyaluminumbBars, dataKeyaluminumSheets, dataKeystainlessSteelSheets,dataKeyFloors});\r\n  }\r\n\r\n  render() {\r\n    // get the contract state from drizzleState\r\n    const { MyStringStore } = this.props.drizzleState.contracts;\r\n \r\n    // using the saved `dataKey`, get the variable we're interested in\r\n     \r\n// aluminumbBars\r\n// aluminumSheets\r\n// stainlessSteelSheets\r\n// springs\r\n// rubberBands\r\n// rubberBumpers\r\n// lightinLed\r\n// displayPanel\r\n// manufacturingButtons\r\n\r\n\r\n    const aluminumbBars = MyStringStore.aluminumbBars[this.state.dataKeyaluminumbBars];\r\n    const aluminumSheets = MyStringStore.aluminumSheets[this.state.dataKeyaluminumSheets];\r\n    const stainlessSteelSheets = MyStringStore.stainlessSteelSheets[this.state.dataKeystainlessSteelSheets];\r\n    const floors = MyStringStore.floors[this.state.dataKeyFloors];\r\n    \r\n    // if it exists, then we display its value\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n          \r\n            <tr>\r\n              <th scope=\"col\">Controllers</th>\r\n              <th scope=\"col\">Shafts</th>\r\n              <th scope=\"col\">Doors</th>\r\n              <th scope=\"col\">Buttons</th>\r\n            </tr>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{aluminumbBars && aluminumbBars.value}</td>\r\n              <td>{aluminumSheets && aluminumSheets.value}</td>\r\n              <td>{aluminumbBars && aluminumbBars.value}</td>\r\n              <td>{aluminumSheets && aluminumSheets.value}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default ManufacturingShow;"]},"metadata":{},"sourceType":"module"}