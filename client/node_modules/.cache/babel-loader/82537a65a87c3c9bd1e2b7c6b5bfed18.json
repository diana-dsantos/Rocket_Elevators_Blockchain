{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Documents\\\\projetos\\\\week 12\\\\drizzle-react-tutorial\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport ProjectOfficeShow from \"./controllers/ProjectOfficeShow\";\nimport ProjetOfficeInput from \"./controllers/ProjetOfficeInput\";\nimport MaterialsProviderShow from \"./controllers/MaterialsProviderShow\";\nimport MaterialsProviderInput from \"./controllers/MaterialsProviderInput\";\nimport ManufacturingShow from \"./controllers/ManufacturingShow.js\";\nimport ManufacturingInput from \"./controllers/ManufacturingInput.js\";\nimport QualitySHInput from \"./controllers/ManufacturingInput.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      drizzleState: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props; // subscribe to changes in the store\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState\n        });\n      }\n    }); // adding scripts\n\n    const script1 = document.createElement(\"script\");\n    const script2 = document.createElement(\"script\");\n    const script3 = document.createElement(\"script\");\n    const link = document.createElement(\"link\");\n    link.rel = \"stylesheet\";\n    link.href = \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\";\n    script1.src = \"https://code.jquery.com/jquery-3.3.1.slim.min.js\";\n    script1.async = true;\n    script2.src = \"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\";\n    script2.async = true;\n    script3.src = \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\";\n    script3.type = \"application/json\";\n    document.head.appendChild(link);\n    document.head.appendChild(script1);\n    document.head.appendChild(script2);\n    document.head.appendChild(script3);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    if (this.state.loading) return \"Loading Drizzle...\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbarlg\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-1\",\n          children: \"ROCKET ELEVATORS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(ProjetOfficeInput, {\n          drizzle: this.props.drizzle,\n          drizzleState: this.state.drizzleState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(QualitySHInput, {\n          drizzle: this.props.drizzle,\n          drizzleState: this.state.drizzleState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Diana/Documents/projetos/week 12/drizzle-react-tutorial/client/src/App.js"],"names":["React","Component","ProjectOfficeShow","ProjetOfficeInput","MaterialsProviderShow","MaterialsProviderInput","ManufacturingShow","ManufacturingInput","QualitySHInput","App","state","loading","drizzleState","componentDidMount","drizzle","props","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState","script1","document","createElement","script2","script3","link","rel","href","src","async","type","head","appendChild","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProjectOfficeShow from \"./controllers/ProjectOfficeShow\";\nimport ProjetOfficeInput from \"./controllers/ProjetOfficeInput\";\nimport MaterialsProviderShow from \"./controllers/MaterialsProviderShow\";\nimport MaterialsProviderInput from \"./controllers/MaterialsProviderInput\";\nimport ManufacturingShow from \"./controllers/ManufacturingShow.js\";\nimport ManufacturingInput from \"./controllers/ManufacturingInput.js\";\nimport QualitySHInput from \"./controllers/ManufacturingInput.js\";\n\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n  state = { loading: true, drizzleState: null };\n\n  componentDidMount() {\n    const { drizzle } = this.props;\n\n    // subscribe to changes in the store\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState();\n\n      // check to see if it's ready, if so, update local component state\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState });\n      }\n    });\n\n\t\t// adding scripts\n\t\tconst script1 = document.createElement(\"script\");\n\t\tconst script2 = document.createElement(\"script\");\n\t\tconst script3 = document.createElement(\"script\");\t\t\n\t\tconst link = document.createElement(\"link\");\n\n\t\tlink.rel=\"stylesheet\"\n\t\tlink.href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n\n\t\tscript1.src = \"https://code.jquery.com/jquery-3.3.1.slim.min.js\";\n\t\tscript1.async = true;\n\n\t\tscript2.src = \"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\";\n\t\tscript2.async = true;\n\n\t\tscript3.src = \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\";\n\t\tscript3.type = \"application/json\"\n\n\t\tdocument.head.appendChild(link);\n\t\tdocument.head.appendChild(script1);\n\t\tdocument.head.appendChild(script2);\n\t\tdocument.head.appendChild(script3);\t\t\n  }\n\n  \n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    if (this.state.loading) return \"Loading Drizzle...\";\n    return (\t\t\t\n    <div>\n      <nav className=\"navbarlg\">\n        <h1 className =\"display-1\">ROCKET ELEVATORS</h1>\n      </nav>\n      <div className=\"App\">\n        <ProjetOfficeInput\n          drizzle={this.props.drizzle}\n          drizzleState={this.state.drizzleState}\n        />\n        <QualitySHInput\n          drizzle={this.props.drizzle}\n          drizzleState={this.state.drizzleState}\n        />\n      </div>\n    </div> \n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}