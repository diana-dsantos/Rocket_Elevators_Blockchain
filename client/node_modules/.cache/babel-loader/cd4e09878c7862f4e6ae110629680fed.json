{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Documents\\\\projetos\\\\week 12\\\\drizzle-react-tutorial\\\\client\\\\src\\\\controllers\\\\ManufacturingInput.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MaterialsProviderShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKeyControllers: null,\n      dataKeyShafts: null,\n      dataKeyDoors: null,\n      dataKeyButtons: null,\n      dataKeyDisplay: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.MyStringStore;\n    console.log(drizzle);\n    console.log(drizzleState); // let drizzle know we want to watch the `myString` method\n\n    const dataKeyControllers = contract.methods[\"controllers\"].cacheCall();\n    const dataKeyShafts = contract.methods[\"shafts\"].cacheCall();\n    const dataKeyDoors = contract.methods[\"doors\"].cacheCall();\n    const dataKeyButtons = contract.methods[\"buttons\"].cacheCall();\n    const dataKeyDisplay = contract.methods[\"display\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKeyControllers,\n      dataKeyShafts,\n      dataKeyDoors,\n      dataKeyButtons,\n      dataKeyDisplay\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      MyStringStore\n    } = this.props.drizzleState.contracts; // using the saved `dataKey`, get the variable we're interested in\n\n    const controllers = MyStringStore.controllers[this.state.dataKeyControllers];\n    const shafts = MyStringStore.shafts[this.state.dataKeyShafts];\n    const doors = MyStringStore.doors[this.state.dataKeyDoors];\n    const buttons = MyStringStore.buttons[this.state.dataKeyButtons];\n    const display = MyStringStore.display[this.state.dataKeyDisplay]; // if it exists, then we display its value\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Material\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: controllers && controllers.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: shafts && shafts.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MaterialsProviderShow;","map":{"version":3,"sources":["C:/Users/Diana/Documents/projetos/week 12/drizzle-react-tutorial/client/src/controllers/ManufacturingInput.js"],"names":["React","MaterialsProviderShow","Component","state","dataKeyControllers","dataKeyShafts","dataKeyDoors","dataKeyButtons","dataKeyDisplay","componentDidMount","drizzle","drizzleState","props","contract","contracts","MyStringStore","console","log","methods","cacheCall","setState","render","controllers","shafts","doors","buttons","display","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass MaterialsProviderShow extends React.Component {\r\n  state = { dataKeyControllers: null,dataKeyShafts: null, dataKeyDoors: null, dataKeyButtons: null, dataKeyDisplay: null};\r\n\r\n  componentDidMount() {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MyStringStore;\r\n\r\n    console.log(drizzle);\r\n    console.log(drizzleState);\r\n\r\n    // let drizzle know we want to watch the `myString` method\r\n    const dataKeyControllers = contract.methods[\"controllers\"].cacheCall();\r\n    const dataKeyShafts = contract.methods[\"shafts\"].cacheCall();\r\n    const dataKeyDoors = contract.methods[\"doors\"].cacheCall();\r\n    const dataKeyButtons = contract.methods[\"buttons\"].cacheCall();\r\n    const dataKeyDisplay = contract.methods[\"display\"].cacheCall();\r\n\r\n    // save the `dataKey` to local component state for later reference\r\n    this.setState({ dataKeyControllers, dataKeyShafts, dataKeyDoors, dataKeyButtons, dataKeyDisplay});\r\n  }\r\n\r\n  render() {\r\n    // get the contract state from drizzleState\r\n    const { MyStringStore } = this.props.drizzleState.contracts;\r\n \r\n    // using the saved `dataKey`, get the variable we're interested in\r\n    const controllers = MyStringStore.controllers[this.state.dataKeyControllers];\r\n    const shafts = MyStringStore.shafts[this.state.dataKeyShafts];\r\n    const doors = MyStringStore.doors[this.state.dataKeyDoors];\r\n    const buttons = MyStringStore.buttons[this.state.dataKeyButtons];\r\n    const display = MyStringStore.display[this.state.dataKeyDisplay];\r\n\r\n    // if it exists, then we display its value\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n          \r\n            <tr>\r\n              <th scope=\"col\">Material</th>\r\n              <th scope=\"col\">Quantity</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{controllers && controllers.value}</td>\r\n              <td>{shafts && shafts.value}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default MaterialsProviderShow;"]},"metadata":{},"sourceType":"module"}