{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Documents\\\\projetos\\\\week 12\\\\drizzle-react-tutorial\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\"; // import drizzle functions and contract artifact\n\nimport { Drizzle } from \"@drizzle/store\"; //import ProjectOffice from \"./contracts/ProjectOffice.json\";\n\nimport MyStringStore from \"./contracts/MyStringStore.json\"; // let drizzle know what contracts we want and how to access our test blockchain\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  contracts: [MyStringStore],\n  web3: {\n    fallback: {\n      type: \"ws\",\n      url: \"ws://127.0.0.1:9545 \"\n    }\n  }\n}; //127.0.0.1:9545 truffle --- 192.168.2.13:7545 ganache\n// setup drizzle\n\nconst drizzle = new Drizzle(options);\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n  drizzle: drizzle\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 17\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/Diana/Documents/projetos/week 12/drizzle-react-tutorial/client/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Drizzle","MyStringStore","options","contracts","web3","fallback","type","url","drizzle","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,gBAAxB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gCAA1B,C,CAEA;;;AACA,MAAMC,OAAO,GAAG;AACfC,EAAAA,SAAS,EAAE,CAACF,aAAD,CADI;AAEfG,EAAAA,IAAI,EAAE;AACLC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,GAAG,EAAE;AAFI;AADL;AAFS,CAAhB,C,CASA;AACA;;AACA,MAAMC,OAAO,GAAG,IAAIR,OAAJ,CAAYE,OAAZ,CAAhB;AAEAL,QAAQ,CAACY,MAAT,eAAgB,QAAC,GAAD;AAAK,EAAA,OAAO,EAAED;AAAd;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA2CE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3C,E,CAEA;AACA;AACA;;AACAZ,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// import drizzle functions and contract artifact\nimport { Drizzle } from \"@drizzle/store\";\n//import ProjectOffice from \"./contracts/ProjectOffice.json\";\nimport MyStringStore from \"./contracts/MyStringStore.json\";\n\n// let drizzle know what contracts we want and how to access our test blockchain\nconst options = {\n\tcontracts: [MyStringStore],\n\tweb3: {\n\t\tfallback: {\n\t\t\ttype: \"ws\",\n\t\t\turl: \"ws://127.0.0.1:9545 \",\n\t\t},\n\t},\n};\n//127.0.0.1:9545 truffle --- 192.168.2.13:7545 ganache\n// setup drizzle\nconst drizzle = new Drizzle(options);\n\nReactDOM.render(<App drizzle={drizzle} />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"]},"metadata":{},"sourceType":"module"}