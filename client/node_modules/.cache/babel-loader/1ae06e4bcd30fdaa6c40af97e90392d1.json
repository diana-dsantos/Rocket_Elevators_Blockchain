{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Documents\\\\projetos\\\\week 12\\\\drizzle-react-tutorial\\\\client\\\\src\\\\controllers\\\\ManufacturingShow.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ManufacturingShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKeyAluminumbBars: null,\n      dataKeyAluminumSheets: null,\n      dataKeyStainlessSteelSheets: null,\n      dataKeySprings: null,\n      dataKeyRubberBands: null,\n      dataKeyLightinLed: null,\n      dataKeydisplayPanel: null,\n      dataKeymanufacturingButtons: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.MyStringStore;\n    console.log(drizzle);\n    console.log(drizzleState); // let drizzle know we want to watch the `myString` method\n\n    const dataKeyAluminumbBars = contract.methods[\"aluminumbBars\"].cacheCall();\n    const dataKeyAluminumSheets = contract.methods[\"aluminumSheets\"].cacheCall();\n    const dataKeyStainlessSteelSheets = contract.methods[\"stainlessSteelSheets\"].cacheCall();\n    const dataKeySprings = contract.methods[\"springs\"].cacheCall();\n    const dataKeyRubberBands = contract.methods[\"rubberBands\"].cacheCall();\n    const dataKeyLightinLed = contract.methods[\"lightinLed\"].cacheCall();\n    const dataKeyDisplayPanel = contract.methods[\"displayPanel\"].cacheCall();\n    const dataKeymanufacturingButtons = contract.methods[\"manufacturingButtonsrings\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKeyAluminumbBars,\n      dataKeyAluminumSheets,\n      dataKeyStainlessSteelSheets,\n      dataKeySprings,\n      dataKeyRubberBands,\n      dataKeyLightinLed,\n      dataKeyDisplayPanel,\n      dataKeymanufacturingButtons\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      MyStringStore\n    } = this.props.drizzleState.contracts; // using the saved `dataKey`, get the variable we're interested in\n\n    const aluminumbBars = MyStringStore.aluminumbBars[this.state.dataKeyAluminumbBars];\n    const aluminumSheets = MyStringStore.aluminumSheets[this.state.dataKeyAluminumSheets];\n    const stainlessSteelSheets = MyStringStore.stainlessSteelSheets[this.state.dataKeyStainlessSteelSheets];\n    const springs = MyStringStore.springs[this.state.dataKeySprings];\n    const rubberBands = MyStringStore.rubberBands[this.state.dataKeyRubberBands];\n    const lightinLed = MyStringStore.lightinLed[this.state.dataKeylightinLed];\n    const displayPanel = MyStringStore.displayPanel[this.state.dataKeyDisplayPanel];\n    const manufacturingButtons = MyStringStore.manufacturingButtons[this.state.dataKeymanufacturingButtons]; // if it exists, then we display its value\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Controllers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Shafts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Doors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Buttons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluminumbBars && aluminumbBars.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluminumSheets && aluminumSheets.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluminumbBars && aluminumbBars.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: aluminumSheets && aluminumSheets.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ManufacturingShow;","map":{"version":3,"sources":["C:/Users/Diana/Documents/projetos/week 12/drizzle-react-tutorial/client/src/controllers/ManufacturingShow.js"],"names":["React","ManufacturingShow","Component","state","dataKeyAluminumbBars","dataKeyAluminumSheets","dataKeyStainlessSteelSheets","dataKeySprings","dataKeyRubberBands","dataKeyLightinLed","dataKeydisplayPanel","dataKeymanufacturingButtons","componentDidMount","drizzle","drizzleState","props","contract","contracts","MyStringStore","console","log","methods","cacheCall","dataKeyDisplayPanel","setState","render","aluminumbBars","aluminumSheets","stainlessSteelSheets","springs","rubberBands","lightinLed","dataKeylightinLed","displayPanel","manufacturingButtons","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass ManufacturingShow extends React.Component {\r\n  state = { dataKeyAluminumbBars: null,dataKeyAluminumSheets: null, dataKeyStainlessSteelSheets: null, dataKeySprings: null, dataKeyRubberBands: null, dataKeyLightinLed: null, dataKeydisplayPanel: null, dataKeymanufacturingButtons: null};\r\n\r\n  componentDidMount() {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MyStringStore;\r\n\r\n    console.log(drizzle);\r\n    console.log(drizzleState);\r\n\r\n    // let drizzle know we want to watch the `myString` method\r\n    const dataKeyAluminumbBars = contract.methods[\"aluminumbBars\"].cacheCall();\r\n    const dataKeyAluminumSheets = contract.methods[\"aluminumSheets\"].cacheCall();\r\n    const dataKeyStainlessSteelSheets = contract.methods[\"stainlessSteelSheets\"].cacheCall();\r\n    const dataKeySprings = contract.methods[\"springs\"].cacheCall();\r\n    const dataKeyRubberBands = contract.methods[\"rubberBands\"].cacheCall();\r\n    const dataKeyLightinLed = contract.methods[\"lightinLed\"].cacheCall();\r\n    const dataKeyDisplayPanel = contract.methods[\"displayPanel\"].cacheCall();\r\n    const dataKeymanufacturingButtons = contract.methods[\"manufacturingButtonsrings\"].cacheCall();\r\n\r\n    // save the `dataKey` to local component state for later reference\r\n    this.setState({ dataKeyAluminumbBars, dataKeyAluminumSheets, dataKeyStainlessSteelSheets,dataKeySprings, dataKeyRubberBands, dataKeyLightinLed, dataKeyDisplayPanel, dataKeymanufacturingButtons});\r\n  }\r\n\r\n  render() {\r\n    // get the contract state from drizzleState\r\n    const { MyStringStore } = this.props.drizzleState.contracts;\r\n \r\n    // using the saved `dataKey`, get the variable we're interested in\r\n\r\n    const aluminumbBars = MyStringStore.aluminumbBars[this.state.dataKeyAluminumbBars];\r\n    const aluminumSheets = MyStringStore.aluminumSheets[this.state.dataKeyAluminumSheets];\r\n    const stainlessSteelSheets = MyStringStore.stainlessSteelSheets[this.state.dataKeyStainlessSteelSheets];\r\n    const springs = MyStringStore.springs[this.state.dataKeySprings];\r\n    const rubberBands = MyStringStore.rubberBands[this.state.dataKeyRubberBands];    \r\n    const lightinLed = MyStringStore.lightinLed[this.state.dataKeylightinLed];\r\n    const displayPanel = MyStringStore.displayPanel[this.state.dataKeyDisplayPanel];   \r\n    const manufacturingButtons = MyStringStore.manufacturingButtons[this.state.dataKeymanufacturingButtons];\r\n    \r\n    // if it exists, then we display its value\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n          \r\n            <tr>\r\n              <th scope=\"col\">Controllers</th>\r\n              <th scope=\"col\">Shafts</th>\r\n              <th scope=\"col\">Doors</th>\r\n              <th scope=\"col\">Buttons</th>\r\n            </tr>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{aluminumbBars && aluminumbBars.value}</td>\r\n              <td>{aluminumSheets && aluminumSheets.value}</td>\r\n              <td>{aluminumbBars && aluminumbBars.value}</td>\r\n              <td>{aluminumSheets && aluminumSheets.value}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default ManufacturingShow;"]},"metadata":{},"sourceType":"module"}