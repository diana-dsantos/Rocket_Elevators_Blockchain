{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Documents\\\\projetos\\\\week 12\\\\drizzle-react-tutorial\\\\client\\\\src\\\\controllers\\\\ProjectOfficeShow.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectOfficeShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKeyBattery: null,\n      dataKeyColumns: null,\n      dataKeyElevators: null,\n      dataKeyFloors: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle,\n      drizzleState\n    } = this.props;\n    const contract = drizzle.contracts.MyStringStore;\n    console.log(drizzle);\n    console.log(drizzleState); // let drizzle know we want to watch the `myString` method\n\n    const dataKeyBattery = contract.methods[\"batteries\"].cacheCall();\n    const dataKeyColumns = contract.methods[\"columns\"].cacheCall();\n    const dataKeyElevators = contract.methods[\"elevators\"].cacheCall();\n    const dataKeyFloors = contract.methods[\"floors\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKeyBattery,\n      dataKeyColumns,\n      dataKeyElevators,\n      dataKeyFloors,\n      dataKeyPackage\n    });\n  }\n\n  teste() {\n    alert(\"Teste\");\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      MyStringStore\n    } = this.props.drizzleState.contracts; // using the saved `dataKey`, get the variable we're interested in\n\n    const batteries = MyStringStore.batteries[this.state.dataKeyBattery];\n    const columns = MyStringStore.columns[this.state.dataKeyColumns];\n    const elevators = MyStringStore.elevators[this.state.dataKeyElevators];\n    const floors = MyStringStore.floors[this.state.dataKeyFloors]; // if it exists, then we display its value\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Controllers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Shafts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Doors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Buttons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: batteries && batteries.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: columns && columns.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: elevators && elevators.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: floors && floors.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ProjectOfficeShow;","map":{"version":3,"sources":["C:/Users/Diana/Documents/projetos/week 12/drizzle-react-tutorial/client/src/controllers/ProjectOfficeShow.js"],"names":["React","ProjectOfficeShow","Component","state","dataKeyBattery","dataKeyColumns","dataKeyElevators","dataKeyFloors","componentDidMount","drizzle","drizzleState","props","contract","contracts","MyStringStore","console","log","methods","cacheCall","setState","dataKeyPackage","teste","alert","render","batteries","columns","elevators","floors","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass ProjectOfficeShow extends React.Component {\r\n  state = { dataKeyBattery: null,dataKeyColumns: null, dataKeyElevators: null, dataKeyFloors: null};\r\n\r\n  componentDidMount() {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MyStringStore;\r\n\r\n    console.log(drizzle);\r\n    console.log(drizzleState);\r\n\r\n    // let drizzle know we want to watch the `myString` method\r\n    const dataKeyBattery = contract.methods[\"batteries\"].cacheCall();\r\n    const dataKeyColumns = contract.methods[\"columns\"].cacheCall();\r\n    const dataKeyElevators = contract.methods[\"elevators\"].cacheCall();\r\n    const dataKeyFloors = contract.methods[\"floors\"].cacheCall();\r\n\r\n\r\n    // save the `dataKey` to local component state for later reference\r\n    this.setState({ dataKeyBattery, dataKeyColumns, dataKeyElevators,dataKeyFloors, dataKeyPackage});\r\n  }\r\n\r\n  teste() {\r\n    alert(\"Teste\");\r\n  };\r\n\r\n\r\n  render() {\r\n    // get the contract state from drizzleState\r\n    const { MyStringStore } = this.props.drizzleState.contracts;\r\n \r\n    // using the saved `dataKey`, get the variable we're interested in\r\n    const batteries = MyStringStore.batteries[this.state.dataKeyBattery];\r\n    const columns = MyStringStore.columns[this.state.dataKeyColumns];\r\n    const elevators = MyStringStore.elevators[this.state.dataKeyElevators];\r\n    const floors = MyStringStore.floors[this.state.dataKeyFloors];\r\n\r\n    \r\n    // if it exists, then we display its value\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Controllers</th>\r\n              <th scope=\"col\">Shafts</th>\r\n              <th scope=\"col\">Doors</th>\r\n              <th scope=\"col\">Buttons</th>\r\n              <th scope=\"col\">Display</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{batteries && batteries.value}</td>\r\n              <td>{columns && columns.value}</td>\r\n              <td>{elevators && elevators.value}</td>\r\n              <td>{floors && floors.value}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default ProjectOfficeShow;"]},"metadata":{},"sourceType":"module"}