[{"C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\index.js":"1","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\App.js":"2","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\MaterialsProviderShow.js":"4","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\MaterialsProviderInput.js":"5","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\ProjetOfficeInput.js":"6","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\ProjectOfficeShow.js":"7","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\ManufacturingInput.js":"8","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\ManufacturingShow.js":"9","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\QualitySHInput.js":"10"},{"size":1002,"mtime":1618508886508,"results":"11","hashOfConfig":"12"},{"size":2667,"mtime":1618531511603,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":5444,"mtime":1618531290760,"results":"15","hashOfConfig":"12"},{"size":3896,"mtime":1618531290760,"results":"16","hashOfConfig":"12"},{"size":3054,"mtime":1618503587458,"results":"17","hashOfConfig":"12"},{"size":2236,"mtime":1618454564304,"results":"18","hashOfConfig":"12"},{"size":3878,"mtime":1618531290760,"results":"19","hashOfConfig":"12"},{"size":5434,"mtime":1618520479661,"results":"20","hashOfConfig":"12"},{"size":3496,"mtime":1618530358362,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1n55d5l",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\index.js",[],["45","46"],"C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\App.js",["47","48","49","50"],"C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\MaterialsProviderShow.js",["51"],"C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\MaterialsProviderInput.js",[],"C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\ProjetOfficeInput.js",["52"],"import React from \"react\";\r\nimport ProjectOfficeShow from \"./ProjectOfficeShow\";\r\n\r\nclass ProjetOfficeInput extends React.Component {\r\n  state = { stackId: null };\r\n\r\n  handleKeyDown (e, methodName) {\r\n    // if the enter key is pressed, set the value with the string\r\n    if (e.keyCode === 13) {\r\n      this.setValue(e.target.value, methodName);\r\n    }\r\n  };\r\n\r\n  setValue (value, methodName) {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MyStringStore;\r\n\r\n    // let drizzle know we want to call the `set` method with `value`\r\n    const stackId = contract.methods[methodName].cacheSend(value, {\r\n      from: drizzleState.accounts[0]\r\n    });\r\n\r\n    // save the `stackId` for later reference\r\n    this.setState({ stackId });\r\n  };\r\n\r\n  // getTxStatus = () => {\r\n  //   // get the transaction states from the drizzle state\r\n  //   const { transactions, transactionStack } = this.props.drizzleState;\r\n\r\n  //   // get the transaction hash using our saved `stackId`\r\n  //   const txHash = transactionStack[this.state.stackId];\r\n\r\n  //   // if transaction hash does not exist, don't display anything\r\n  //   if (!txHash) return null;\r\n\r\n  //   // otherwise, return the transaction status\r\n  //   return `Transaction status: ${transactions[txHash] && transactions[txHash].status}`;\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n       <div className=\"card\" >\r\n       <div className=\"card-header\">\r\n         Input your project data\r\n       </div>\r\n       <ul className=\"list-group list-group-flush\">\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Batteries: </div>{\" \"}\r\n              <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setBatteries')} />\r\n            </div>\r\n         </li>\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Columns: </div>{\" \"}\r\n\t\t\t\t      <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setColumns')} />\r\n            </div>\r\n         </li>\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Elevators: </div>{\" \"}\r\n\t\t\t\t      <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setElevators')} />\r\n            </div>\r\n         </li>\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Floors: </div>{\" \"}\r\n\t\t\t\t      <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setFloors')} />\r\n            </div>\r\n         </li>\r\n         <li className=\"list-group-item\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">Package: </div>{\" \"}\r\n\t\t\t\t      <input type=\"text\" onKeyDown={(e) => this.handleKeyDown(e, 'setPackage')} />\r\n            </div>\r\n         </li>\r\n       </ul>\r\n       <button className=\"btn btn-primary\" type=\"submit\" >Submit</button>\r\n       </div>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjetOfficeInput;","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\ProjectOfficeShow.js",[],"C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\ManufacturingInput.js",[],"C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\ManufacturingShow.js",["53"],"import React from \"react\";\r\n\r\nclass ManufacturingShow extends React.Component {\r\n  state = { dataKeyAluminumBars: null,dataKeyAluminumSheets: null, dataKeyStainlessSteelSheets: null, dataKeySprings: null, dataKeyRubberBands: null, dataKeyLightinLed: null, dataKeydisplayPanel: null, dataKeyManufacturingButtons: null};\r\n\r\n  componentDidMount() {\r\n    const { drizzle, drizzleState } = this.props;\r\n    const contract = drizzle.contracts.MyStringStore;\r\n\r\n    console.log(drizzle);\r\n    console.log(drizzleState);\r\n\r\n    // let drizzle know we want to watch the `myString` method\r\n    const dataKeyAluminumBars = contract.methods[\"aluminumBars\"].cacheCall();\r\n    const dataKeyAluminumSheets = contract.methods[\"aluminumSheets\"].cacheCall();\r\n    const dataKeyStainlessSteelSheets = contract.methods[\"stainlessSteelSheets\"].cacheCall();\r\n    const dataKeySprings = contract.methods[\"springs\"].cacheCall();\r\n    const dataKeyRubberBands = contract.methods[\"rubberBands\"].cacheCall();\r\n    const dataKeyLightinLed = contract.methods[\"lightinLed\"].cacheCall();\r\n    const dataKeyDisplayPanel = contract.methods[\"displayPanel\"].cacheCall();\r\n    const dataKeyManufacturingButtons = contract.methods[\"manufacturingButtons\"].cacheCall();\r\n\r\n    // save the `dataKey` to local component state for later reference\r\n    this.setState({ dataKeyAluminumBars, dataKeyAluminumSheets, dataKeyStainlessSteelSheets,dataKeySprings, dataKeyRubberBands, dataKeyLightinLed, dataKeyDisplayPanel, dataKeyManufacturingButtons});\r\n  }\r\n\r\n  render() {\r\n    // get the contract state from drizzleState\r\n    const { MyStringStore } = this.props.drizzleState.contracts;\r\n \r\n    // using the saved `dataKey`, get the variable we're interested in\r\n\r\n    const aluminumBars = MyStringStore.aluminumBars[this.state.dataKeyAluminumBars];\r\n    const aluminumSheets = MyStringStore.aluminumSheets[this.state.dataKeyAluminumSheets];\r\n    const stainlessSteelSheets = MyStringStore.stainlessSteelSheets[this.state.dataKeyStainlessSteelSheets];\r\n    const springs = MyStringStore.springs[this.state.dataKeySprings];\r\n    const rubberBands = MyStringStore.rubberBands[this.state.dataKeyRubberBands];    \r\n    const lightinLed = MyStringStore.lightinLed[this.state.dataKeyLightinLed];\r\n    const displayPanel = MyStringStore.displayPanel[this.state.dataKeyDisplayPanel];   \r\n    const manufacturingButtons = MyStringStore.manufacturingButtons[this.state.dataKeyManufacturingButtons];\r\n    \r\n    // if it exists, then we display its value\r\n    return (\r\n      <div className=\"container\">\r\n      <div className=\"card\" >\r\n      <div className=\"card-header\">\r\n        Input your Manufacturing.\r\n      </div>\r\n        <table className=\"table\">\r\n          <thead>          \r\n            <tr>\r\n              <th scope=\"col\">Product</th>\r\n              <th scope=\"col\">Quantity</th>\r\n              <th scope=\"col\">Check</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Aluminum Bars:</td>\r\n              <td>{aluminumBars && aluminumBars.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Aluminum Sheets:</td>\r\n              <td>{aluminumSheets && aluminumSheets.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Stainless Steel Sheets:</td>\r\n              <td>{stainlessSteelSheets && stainlessSteelSheets.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>            \r\n            <tr>\r\n              <td>Springs:</td>\r\n              <td>{springs && springs.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Rubber Bands:</td>\r\n              <td>{rubberBands && rubberBands.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Rubber Bumpers:</td>\r\n              <td>{aluminumSheets && aluminumSheets.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Lightin Led:</td>\r\n              <td>{lightinLed && lightinLed.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Springs:</td>\r\n              <td>{aluminumSheets && aluminumSheets.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Buttons:</td>\r\n              <td>{aluminumSheets && aluminumSheets.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Display Panel:</td>\r\n              <td>{displayPanel && displayPanel.value}</td>\r\n              <td><input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n      </div>\r\n      </div>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default ManufacturingShow;","C:\\Users\\Diana\\Documents\\projetos\\week 12\\drizzle-react-tutorial\\client\\src\\controllers\\QualitySHInput.js",["54","55","56","57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":29},{"ruleId":"63","severity":1,"message":"68","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":25},{"ruleId":"63","severity":1,"message":"69","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":26},{"ruleId":"63","severity":1,"message":"70","line":40,"column":11,"nodeType":"65","messageId":"66","endLine":40,"endColumn":31},{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":25},{"ruleId":"63","severity":1,"message":"70","line":40,"column":11,"nodeType":"65","messageId":"66","endLine":40,"endColumn":31},{"ruleId":"63","severity":1,"message":"71","line":36,"column":11,"nodeType":"65","messageId":"66","endLine":36,"endColumn":19},{"ruleId":"63","severity":1,"message":"72","line":37,"column":11,"nodeType":"65","messageId":"66","endLine":37,"endColumn":20},{"ruleId":"63","severity":1,"message":"73","line":38,"column":11,"nodeType":"65","messageId":"66","endLine":38,"endColumn":20},{"ruleId":"63","severity":1,"message":"74","line":39,"column":11,"nodeType":"65","messageId":"66","endLine":39,"endColumn":27},{"ruleId":"63","severity":1,"message":"75","line":40,"column":11,"nodeType":"65","messageId":"66","endLine":40,"endColumn":34},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'ProjectOfficeShow' is defined but never used.","Identifier","unusedVar","'MaterialsProviderShow' is defined but never used.","'ManufacturingShow' is defined but never used.","'ManufacturingInput' is defined but never used.","'manufacturingButtons' is assigned a value but never used.","'doorTest' is assigned a value but never used.","'cableTest' is assigned a value but never used.","'braketest' is assigned a value but never used.","'batteryoperating' is assigned a value but never used.","'certificateofconformity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]